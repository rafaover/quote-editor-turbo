name: "Ruby on Rails CI"
on:
  push:
    branches: ["master"]
    paths-ignore:
      - "**.md" # Exclude markdown files from triggering the workflow
  pull_request:
    branches: ["master"]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      # Add or replace database setup steps here
      - name: Set up database schema
        run: bin/rails db:schema:load
      # Add or replace test runners here
      - name: Run tests
        run: bin/rails test:system
      # check test results
      - name: Check test results
        id: test-results
        run: |
          if [[ -n $(grep -i "fail" test_results.xml) ]]; then
            echo "::set-output name=tests_passed::false"
          else
            echo "::set-output name=tests_passed::true"
          fi
      # Cancel the push if fails
      - name: Fail if tests failed
        run: |
          if [[ "${{ steps.test-results.outputs.tests_passed }}" == "false" ]]; then
            echo "Tests failed. Exiting with a non-zero status."
            exit 1
          fi
      # execute the merge if test passes
      - name: Merge push
        if: ${{ github.event_name == 'push' && success() }}
        run: |
          git checkout master
          git merge "${{ github.ref }}"
          git push

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
      - run: gem install rubocop rubocop-rails
      - name: Rubocop Lint
        run: rubocop --parallel
